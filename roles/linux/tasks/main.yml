---
  - block:
      - name: Hostname
        shell: hostname
        # become: true
        register: hostname
      
      - debug:
          var: hostname
      - block:
          - name: slack notification - Notify the template patching status
            vars:
              slackmsg: '{{ item }} CentOS failed at host adding'
              task: slack_notification_reply.yml
            include_role:
              name: common
        when: hostname.stdout is search('tower')
        
      - block:
          - name: slack notification - Notify the template patching status
            vars:
              slackmsg: '{{ item }} CentOS host got added'
              task: slack_notification_reply.yml
            include_role:
              name: common
          
          - name: Registration
            shell: '{{ registrationcmd }}'
            become: true
            register: registrationspace
            
          - debug:
              var: registrationspace
          - debug:
              var: registrationspace.stderr
          
          - name: Check file path
            stat:
              path: "/etc/sysconfig/rhn/systemid"
            register: file_data
          
          - debug:
              var: file_data
          
          - name: Upgrade {{ newvmname }}
            shell: sudo yum update -y
            when: file_data.stat.exists == true
            register: upgrade

          - name: Subscription removal
            shell: sudo subscription-manager clean
            when: file_data.stat.exists == true and newvm.instance.hw_guest_full_name is search('Red Hat')
            register: subscriptonremove
          
          - name: remove sytemid file
            file: 
              name: "/etc/sysconfig/rhn/systemid"
              state: absent

          - set_fact:
              templatepatchingstatus: Success
            when: file_data.stat.exists == true
          
          - debug:
              var: upgrade

        when: hostname.stdout is not search('tower')
        rescue:
          - set_fact:
              templatepatchingstatus: Failed CentOS while updating  
      
    rescue:
      - set_fact:
          templatepatchingstatus: Failed CentOS while updating

  # - block: 
  #   - name: Notify task status to the slack channel
  #     vars: 
  #         slack_domain: electronic-arts.slack.com
  #         slack_channel: "#vm_template_patching"
  #         # item: cb-win2019x64-base
  #         # templatepatchingstatus: Failed
  #         # vcenter_hostname: va-vcnterlab1.ad.ea.com
  #         # "{{slack_api_token}}"
  #         # slack_token: "T039ZEK3W/B01D1S09KM2/0oBg21qJmJrSt5ROSWJRMyzj"
  #     slack: 
  #       domain: "{{ slack_domain }}"
  #       token: "{{slack_api_token}}"
  #       msg: '{{ item }} runned patching'
  #       channel: "{{ slack_channel }}"
  #     when: file_data.stat.exists == true

      
  

  # - name: Task name
  #   yum:
  #     name: '*'
  #     state: latest
  #   register: upgrade
  #   when: file_data.stat.exists == true
  # - name: Upgrade all packages
  #   # become: true
  #   yum:
  #     name: '*'
  #     state: latest
  #   register: upgrade
  
  # - name: Task name
  #   stat:
  #     path: "/etc/pki/rpm-gpg/RPM-GPG-KEY-spacewalk-2015"
  #   register: file_data
  
  # - name: Task name
  #   debug:
  #     msg: "The file or directory exists"
  #   when: file_data_name.stat.exists

  # - name: To disable other all local repos
  #   shell: |
  #     sudo sed -i -r -e 's/^(enabled=)1/\10/' /etc/yum.repos.d/*
  #     sudo sed -i -r -e 's/(gpgcheck.*$)/\1\nenabled=0/' /etc/yum.repos.d/CentOS-Base.repo
  #   register: Disable
    
  # - name: Enabling Spacewalk remote Management
  #   shell: |
  #     sudo /usr/bin/rhn-actions-control --enable-run
  #   register: Enable

  # - set_fact:
  #     vmregistration: Failed
  #   when: registration.results[0].stderr is search('Failed') or registration.results[1].stderr is search('Failed')
  
  # - debug:
  #     var: vmregistration

  # - set_fact:
  #     vmregistration: success
  #   when: (registration.results[0].stderr is search('Nothing to do')) and register_name.stat.exists
